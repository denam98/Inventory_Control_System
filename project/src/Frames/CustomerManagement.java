/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import UtilityClasses.DBConnection;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author B.M.D.C.Bandara
 */
public class CustomerManagement extends javax.swing.JFrame {

    boolean contentChecked;
    String updatingId;
    boolean updateProceder = false;

    Home currHome;
    
    /**
     * Creates new form CustomerManagement
     */
    public CustomerManagement() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            System.out.println(ex);
        }
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        loadTableData();
        setImg(new File("pics/backW.png"), lab_back);
    }

    CustomerManagement(Home aThis) {
        this();
        currHome = aThis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_fname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        but_save = new javax.swing.JButton();
        but_search = new javax.swing.JButton();
        but_update = new javax.swing.JButton();
        but_delete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txt_lname = new javax.swing.JTextField();
        txt_mobile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rb_male = new javax.swing.JRadioButton();
        rb_female = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txt_mail = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_nic = new javax.swing.JTextField();
        rb_active = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        rb_inactive = new javax.swing.JRadioButton();
        lab_back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        kGradientPanel1.setkEndColor(new java.awt.Color(153, 204, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setMaximumSize(new java.awt.Dimension(1366, 768));
        kGradientPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));
        kGradientPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Customer Management");
        kGradientPanel1.add(jLabel1);
        jLabel1.setBounds(6, 6, 499, 74);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("First Name");
        kGradientPanel1.add(jLabel2);
        jLabel2.setBounds(45, 130, 120, 32);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Last Name");
        kGradientPanel1.add(jLabel3);
        jLabel3.setBounds(524, 130, 120, 32);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Mobile No.");
        kGradientPanel1.add(jLabel5);
        jLabel5.setBounds(45, 182, 120, 32);

        txt_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fnameActionPerformed(evt);
            }
        });
        txt_fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_fnameKeyTyped(evt);
            }
        });
        kGradientPanel1.add(txt_fname);
        txt_fname.setBounds(183, 132, 265, 32);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FIRST NAME", "LAST NAME", "GENDER", "MOBILE", "E-emai", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setIntercellSpacing(new java.awt.Dimension(2, 4));
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        kGradientPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 370, 960, 348);

        but_save.setBackground(new java.awt.Color(255, 255, 255));
        but_save.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        but_save.setText("Save");
        but_save.setMaximumSize(new java.awt.Dimension(1366, 768));
        but_save.setMinimumSize(new java.awt.Dimension(1366, 768));
        but_save.setPreferredSize(new java.awt.Dimension(1366, 768));
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });
        kGradientPanel1.add(but_save);
        but_save.setBounds(1070, 130, 246, 93);

        but_search.setBackground(new java.awt.Color(255, 255, 255));
        but_search.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        but_search.setText("Search");
        but_search.setMaximumSize(new java.awt.Dimension(1366, 768));
        but_search.setMinimumSize(new java.awt.Dimension(1366, 768));
        but_search.setPreferredSize(new java.awt.Dimension(1366, 768));
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });
        kGradientPanel1.add(but_search);
        but_search.setBounds(1070, 270, 246, 93);

        but_update.setBackground(new java.awt.Color(255, 255, 255));
        but_update.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        but_update.setText("Update");
        but_update.setMaximumSize(new java.awt.Dimension(1366, 768));
        but_update.setMinimumSize(new java.awt.Dimension(1366, 768));
        but_update.setPreferredSize(new java.awt.Dimension(1366, 768));
        but_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_updateActionPerformed(evt);
            }
        });
        kGradientPanel1.add(but_update);
        but_update.setBounds(1070, 410, 246, 93);

        but_delete.setBackground(new java.awt.Color(255, 255, 255));
        but_delete.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        but_delete.setText("Delete");
        but_delete.setMaximumSize(new java.awt.Dimension(1366, 768));
        but_delete.setMinimumSize(new java.awt.Dimension(1366, 768));
        but_delete.setPreferredSize(new java.awt.Dimension(1366, 768));
        but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_deleteActionPerformed(evt);
            }
        });
        kGradientPanel1.add(but_delete);
        but_delete.setBounds(1070, 560, 246, 93);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        kGradientPanel1.add(jSeparator1);
        jSeparator1.setBounds(1010, 100, 30, 630);

        txt_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_lnameActionPerformed(evt);
            }
        });
        txt_lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_lnameKeyTyped(evt);
            }
        });
        kGradientPanel1.add(txt_lname);
        txt_lname.setBounds(662, 132, 265, 32);

        txt_mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mobileActionPerformed(evt);
            }
        });
        txt_mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mobileKeyTyped(evt);
            }
        });
        kGradientPanel1.add(txt_mobile);
        txt_mobile.setBounds(183, 184, 265, 32);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Gender");
        kGradientPanel1.add(jLabel6);
        jLabel6.setBounds(524, 184, 120, 32);

        buttonGroup1.add(rb_male);
        rb_male.setText("Male");
        rb_male.setOpaque(false);
        rb_male.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_maleKeyPressed(evt);
            }
        });
        kGradientPanel1.add(rb_male);
        rb_male.setBounds(662, 184, 59, 28);

        buttonGroup1.add(rb_female);
        rb_female.setText("Female");
        rb_female.setOpaque(false);
        rb_female.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_femaleKeyPressed(evt);
            }
        });
        kGradientPanel1.add(rb_female);
        rb_female.setBounds(740, 184, 73, 28);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("E-mail");
        kGradientPanel1.add(jLabel7);
        jLabel7.setBounds(45, 236, 120, 32);

        txt_mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mailActionPerformed(evt);
            }
        });
        txt_mail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mailKeyTyped(evt);
            }
        });
        kGradientPanel1.add(txt_mail);
        txt_mail.setBounds(183, 236, 265, 32);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        kGradientPanel1.add(jSeparator2);
        jSeparator2.setBounds(487, 98, 19, 187);

        jButton1.setText("Reset All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        kGradientPanel1.add(jButton1);
        jButton1.setBounds(840, 330, 140, 32);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("NIC No.");
        kGradientPanel1.add(jLabel8);
        jLabel8.setBounds(524, 236, 120, 32);

        txt_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nicActionPerformed(evt);
            }
        });
        txt_nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nicKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nicKeyTyped(evt);
            }
        });
        kGradientPanel1.add(txt_nic);
        txt_nic.setBounds(662, 236, 265, 32);

        buttonGroup2.add(rb_active);
        rb_active.setText("Active");
        rb_active.setOpaque(false);
        rb_active.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_activeKeyPressed(evt);
            }
        });
        kGradientPanel1.add(rb_active);
        rb_active.setBounds(183, 290, 67, 28);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel9.setText("Status");
        kGradientPanel1.add(jLabel9);
        jLabel9.setBounds(45, 290, 120, 32);

        buttonGroup2.add(rb_inactive);
        rb_inactive.setText("Inactive");
        rb_inactive.setOpaque(false);
        rb_inactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rb_inactiveKeyPressed(evt);
            }
        });
        kGradientPanel1.add(rb_inactive);
        rb_inactive.setBounds(260, 290, 76, 28);

        lab_back.setText("jLabel4");
        lab_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lab_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_backMouseExited(evt);
            }
        });
        kGradientPanel1.add(lab_back);
        lab_back.setBounds(1310, 10, 41, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_fnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fnameKeyPressed

    private void txt_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fnameActionPerformed
        if (!txt_fname.getText().trim().equals("")) {
            txt_lname.grabFocus();
        }
    }//GEN-LAST:event_txt_fnameActionPerformed

    private void txt_fnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fnameKeyTyped
        if (Character.isSpaceChar(evt.getKeyChar()) || !Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_fnameKeyTyped

    private void txt_lnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lnameKeyTyped
        if (Character.isSpaceChar(evt.getKeyChar()) || !Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_lnameKeyTyped

    private void txt_mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_mobileKeyTyped

    private void txt_mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mobileActionPerformed
        if (!txt_mobile.getText().trim().equals("")) {
            rb_male.grabFocus();
        }
    }//GEN-LAST:event_txt_mobileActionPerformed

    private void txt_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_lnameActionPerformed
        if (!txt_lname.getText().trim().equals("")) {
            txt_mobile.grabFocus();
        }
    }//GEN-LAST:event_txt_lnameActionPerformed

    private void rb_maleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_maleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_male.setSelected(true);
            txt_mail.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_female.grabFocus();
        }
    }//GEN-LAST:event_rb_maleKeyPressed

    private void rb_femaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_femaleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_female.setSelected(true);
            txt_mail.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_male.grabFocus();
        }
    }//GEN-LAST:event_rb_femaleKeyPressed

    private void txt_mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mailActionPerformed
        if (txt_mail.getText().trim().contains("@") && txt_mail.getText().trim().contains(".com")) {
            txt_nic.grabFocus();
        }
    }//GEN-LAST:event_txt_mailActionPerformed

    private void txt_mailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mailKeyTyped
        if (Character.isSpaceChar(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_mailKeyTyped

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        if (checkContents()) {
            addCustomer();
        }
    }//GEN-LAST:event_but_saveActionPerformed

    private void txt_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nicActionPerformed
        if (!txt_nic.getText().equals("") && (txt_nic.getText().length() == 10 || txt_nic.getText().length() == 12)) {
            rb_active.grabFocus();
        }
    }//GEN-LAST:event_txt_nicActionPerformed

    private void txt_nicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyTyped
    }//GEN-LAST:event_txt_nicKeyTyped

    private void txt_nicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nicKeyPressed
        if ((evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105) || (evt.getKeyCode() >= 48 && evt.getKeyCode() <= 57)
                || (evt.getKeyCode() == KeyEvent.VK_V && !txt_nic.getText().toLowerCase().contains("v")) || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE
                || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_nic.setEditable(true);
        } else {
            txt_nic.setEditable(false);
        }
    }//GEN-LAST:event_txt_nicKeyPressed

    private void but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_deleteActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRow() != -1) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to "
                    + "delete the selected customer?", null, JOptionPane.YES_NO_OPTION);
            if (showConfirmDialog == JOptionPane.YES_OPTION) {
                try {
                    DBConnection.iud("update customer set status='2' where id='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                loadTableData();
                JOptionPane.showMessageDialog(rootPane, "Customer deleted successfully!");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a Customer from the table to delete.", null, JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_but_deleteActionPerformed

    private void rb_activeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_activeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            rb_inactive.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_active.setSelected(true);
            but_save.grabFocus();
        }
    }//GEN-LAST:event_rb_activeKeyPressed

    private void rb_inactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rb_inactiveKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            rb_active.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rb_inactive.setSelected(true);
            but_save.grabFocus();
        }
    }//GEN-LAST:event_rb_inactiveKeyPressed

    private void but_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_updateActionPerformed
        if (checkContents() && updateProceder) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int showConfirmDialog = JOptionPane.showConfirmDialog(rootPane, "Do you want to "
                    + "update the selected customer data?", null, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (showConfirmDialog == JOptionPane.YES_OPTION) {
                try {
                    int stat = (rb_active.isSelected()) ? 1 : 0;
                    String gender = (rb_male.isSelected()) ? "M" : "F";
                    DBConnection.iud("update customer set fname='" + txt_fname.getText().toLowerCase() + "',"
                            + "lname='" + txt_lname.getText().toLowerCase() + "',gender='" + gender + "',"
                            + "mobile='" + txt_mobile.getText() + "',email='" + txt_mail.getText() + "',"
                            + "status='" + stat + "' where id='" + updatingId + "'");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                loadTableData();
                JOptionPane.showMessageDialog(rootPane, "Customer data updated successfully!");
                clearFields();
                updateProceder = false;
                txt_nic.setEditable(true);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Select a customer from the table and update contents first.");
        }
    }//GEN-LAST:event_but_updateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            loadDataToFields();
            updateProceder = true;
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clearFields();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        if (!txt_nic.getText().equals("")) {
            try {
                ResultSet search = DBConnection.search("select * from customer where id like '%" + txt_nic.getText() + "%'");
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                Vector v;
                while (search.next()) {
                    v = new Vector();
                    v.add(search.getString("id"));
                    v.add(search.getString("fname"));
                    v.add(search.getString("lname"));
                    String stat = (search.getInt("status") == 1) ? "Active" : "Inactive";
                    String gender = (search.getString("gender").equals("M")) ? "Male" : "Female";
                    v.add(gender);
                    v.add(search.getString("mobile"));
                    v.add(search.getString("email"));
                    v.add(stat);
                    dtm.addRow(v);
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Type the customer NIC no. to search.");
            txt_nic.grabFocus();
        }
    }//GEN-LAST:event_but_searchActionPerformed

    private void lab_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_backMouseExited
        setImg(new File("pics/backW.png"), lab_back);
    }//GEN-LAST:event_lab_backMouseExited

    private void lab_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_backMouseEntered
        setImg(new File("pics/backB.png"), lab_back);
    }//GEN-LAST:event_lab_backMouseEntered

    private void lab_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_backMouseClicked
        currHome.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lab_backMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_delete;
    private javax.swing.JButton but_save;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private keeptoo.KGradientPanel kGradientPanel1;
    public javax.swing.JLabel lab_back;
    private javax.swing.JRadioButton rb_active;
    private javax.swing.JRadioButton rb_female;
    private javax.swing.JRadioButton rb_inactive;
    private javax.swing.JRadioButton rb_male;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_mobile;
    private javax.swing.JTextField txt_nic;
    // End of variables declaration//GEN-END:variables

    private boolean checkContents() {
        if (txt_fname.getText().equals("")) {
            txt_fname.grabFocus();
            contentChecked = false;
        } else if (txt_lname.getText().equals("")) {
            txt_lname.grabFocus();
            contentChecked = false;
        } else if (txt_mobile.getText().equals("") || txt_mobile.getText().length() != 10) {
            txt_mobile.grabFocus();
            contentChecked = false;
        } else if (!rb_male.isSelected() && !rb_female.isSelected()) {
            rb_male.grabFocus();
            contentChecked = false;
        } else if (txt_mail.getText().equals("")) {
            txt_mail.grabFocus();
            contentChecked = false;
        } else if (txt_nic.getText().equals("") || !(txt_nic.getText().length() == 10 || txt_nic.getText().length() == 12)) {
            txt_nic.grabFocus();
            contentChecked = false;
        } else if (!rb_active.isSelected() && !rb_inactive.isSelected()) {
            rb_active.grabFocus();
            contentChecked = false;
        } else {
            contentChecked = true;
        }
        return contentChecked;
    }

    private void addCustomer() {
        String gender = (rb_male.isSelected()) ? "M" : "F";
        int stat = (rb_active.isSelected()) ? 1 : 0;
        try {
            DBConnection.iud("insert into customer values"
                    + "('" + txt_nic.getText() + "','" + txt_fname.getText() + "','" + txt_lname.getText() + "','" + gender + "','" + txt_mobile.getText() + "',"
                    + "'" + txt_mail.getText() + "','" + stat + "')");
            loadTableData();
            JOptionPane.showMessageDialog(rootPane, "Customer added successfully!");
            clearFields();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void clearFields() {
        txt_fname.setText(null);
        txt_lname.setText(null);
        txt_mail.setText(null);
        txt_mobile.setText(null);
        txt_nic.setText(null);
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        txt_fname.grabFocus();
        loadTableData();
    }

    private void loadTableData() {
        try {
            ResultSet search = DBConnection.search("select * from customer where status!=2");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            Vector v;
            while (search.next()) {
                v = new Vector();
                v.add(search.getString("id"));
                v.add(search.getString("fname"));
                v.add(search.getString("lname"));
                String gender = (search.getString("gender").equals("M")) ? "Male" : "Female";
                v.add(gender);
                v.add(search.getString("mobile"));
                v.add(search.getString("email"));
                String stat = (search.getInt("status") == 1) ? "Active" : "Inactive";
                v.add(stat);
                dtm.addRow(v);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void loadDataToFields() {
        txt_nic.setEditable(false);

        updatingId = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        String fname = jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String lname = jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString();
        String mobile = jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
        String mail = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
        boolean stat = (jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().equals("Active")) ? true : false;
        boolean gender = (jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString().equals("Male")) ? true : false;

        txt_fname.setText(fname);
        txt_lname.setText(lname);
        txt_mobile.setText(mobile);
        txt_mail.setText(mail);
        txt_nic.setText(String.valueOf(updatingId));
        if (stat) {
            rb_active.setSelected(true);
        } else {
            rb_inactive.setSelected(true);
        }
        if (gender) {
            rb_male.setSelected(true);
        } else {
            rb_female.setSelected(true);
        }
    }
    
    private void setImg(File f, JLabel lab){
        try {
            Image img = ImageIO.read(f);
            img = img.getScaledInstance(lab.getWidth(), lab.getHeight(), Image.SCALE_SMOOTH);
            lab.setIcon(new ImageIcon(img));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
